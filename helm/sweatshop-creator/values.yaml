# Default values for sweatShop-creator.
namespace: sweatshop
tektonResources:
  enabled: false
pipelineRuns:
  enableRuns: false
  runs:
    buildHelmChart:
      name: sws-creator-helm
      addRandomDateToRunName: false
      namespace: tekton-cd
      kind: Pipeline
      ref: package-publish-helmchart
      params:
        git-repo-url: git@github.com:stuttgart-things/sweatShop-creator.git
        git-revision: main
        gitWorkspaceSubdirectory: /helm/sws-c
        helm-chart-name: sweatshop-creator
        helm-chart-tag: v0.1.46
        helm-chart-path: helm
        registry: scr.app.4sthings.tiab.ssc.sva.de
        working-image: "eu.gcr.io/stuttgart-things/sthings-k8s:1.127.2"
      workspaces:
        ssh-credentials:
          workspaceKind: secret
          workspaceRef: github-ssh
        source:
          workspaceKind: persistentVolumeClaim
          workspaceRef: helm-workspace
        dockerconfig:
          workspaceKind: secret
          workspaceRef: scr-labda-vsphere
    buildKanikoImage:
      name: sws-creator-kaniko
      addRandomDateToRunName: false
      namespace: tekton-cd
      kind: Pipeline
      ref: build-kaniko-image
      params:
        gitRepoUrl: git@github.com:stuttgart-things/sweatShop-creator.git
        git-revision: main
        context: /kaniko/sws-creator
        gitWorkspaceSubdirectory: /kaniko/sws-creator
        image: scr.app.4sthings.tiab.ssc.sva.de/sweatshop/creator
        tag: 23.0729.0808-v0.1.46
        registry: eu.gcr.io
        dockerfile: Dockerfile
      workspaces:
        ssh-credentials:
          workspaceKind: secret
          workspaceRef: github-ssh
        shared-workspace:
          workspaceKind: persistentVolumeClaim
          workspaceRef: kaniko-workspace
        dockerconfig:
          workspaceKind: secret
          workspaceRef: scr-labda-vsphere
redis:
  enabled: false
  # sentinel:
  #   enabled: true
  # master:
  #   service:
  #     type: ClusterIP
  #   persistence:
  #     enabled: false
  #     medium: ""
  # replica:
  #   replicaCount: 1
  #   persistence:
  #     enabled: false
  #     medium: ""
  # auth:
  #   password: just4dev
configmaps:
  #   creator:
  #     TEMPLATE_PATH: /templates
  #     TEMPLATE_NAME: ansible-job.yaml.gotmpl
  #     REDIS_STREAM: sweatshop:manifests
  #     REDIS_SERVER: sweatshop-informer-redis-headless.sweatshop.svc.cluster.local
  #     REDIS_PORT: "6379"
  #     REDIS_PASSWORD: just4dev
  manifest-templates:
    inventory.gotmpl: |
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: {{`{{ .name }}`}}
        namespace: {{`{{ .namespace }}`}}
      data:
        inventory: |{{`{{ range $name, $value := .inventory }}`}}
          [{{`{{ $name }}`}}]{{`{{ range $value }}`}}
          {{`{{ . }}`}}{{`{{ end }}`}}
          {{`{{ end }}`}}
    playbook.gotmpl: |
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: {{`{{ .name }}`}}
        namespace: {{`{{ .namespace }}`}}
      data:
        prepare-env.yaml: |
          - hosts: localhost
            become: false
            vars:
              home_dir: {{`{{ "{{ lookup('env','HOME') }}" }}`}}
              inv_path: {{`{{ "{{ lookup('env','INV_PATH') }}" }}`}}
              vault_approle_id: {{`{{ "{{ lookup('env', 'VAULT_ROLE_ID') }}" }}`}}
              vault_approle_secret: {{`{{ "{{ lookup('env', 'VAULT_SECRET_ID') }}" }}`}}
              vault_url: {{`{{ "{{ lookup('env', 'VAULT_ADDR') }}" }}`}}
            tasks:
              - name: Creating ssh directory
                ansible.builtin.file:
                  path: {{`{{printf "%q" "{{ home_dir }}/.ssh/" }}`}}
                  state: directory
              - name: Creating ssh private key file
                ansible.builtin.copy:
                  dest: {{`{{ "{{ home_dir }}/.ssh/id_rsa" }}`}}
                  content: {{`{{printf "%q" "{{ ssh_key | b64decode }}" }}`}}
                  mode: '0600'
    ansible-job.yaml.gotmpl: |
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: 2023-07-02-configure-rke-node-19mv
        namespace: {{`{{ .Namespace }}`}}
        labels:
          app: machine-shop-operator
          machine-shop-operator: ansible
      spec:
        template:
          metadata:
            name: 2023-07-02-configure-rke-node-19mv
            labels:
              app: machine-shop-operator
              machine-shop-operator: ansible
          spec:
            containers:
              - name: manager
                image: eu.gcr.io/stuttgart-things/sthings-ansible:8.0.0-4
                imagePullPolicy: Always
                securityContext:
                  allowPrivilegeEscalation: true
                  privileged: true
                  runAsNonRoot: true
                  readOnlyRootFilesystem: false
                  runAsUser: 65532
                env:
                  - name: ANSIBLE_HOST_KEY_CHECKING
                    value: "False"
                  - name: INV_PATH
                    value: "/tmp/inv"
                  - name: TARGETS
                    value: "mso-vm2.tiab.labda.sva.de"
                envFrom:
                  - secretRef:
                      name: vault
                resources:
                  requests:
                    cpu: 150m
                    memory: 256Mi
                  limits:
                    cpu: 500m
                    memory: 768Mi
                command:
                  - /bin/sh
                  - -ec
                  - touch ${INV_PATH} && ansible-playbook -i $INV_PATH $HOME/ansible/play.yaml -vv -e prepare_env=true -e execute_baseos=true -e target_play=configure-rke-node
                volumeMounts:
                  - name: ansible
                    mountPath: /home/nonroot/ansible
            restartPolicy: Never
            volumes:
              - name: ansible
                configMap:
                  name: ansible
deployment:
  name: sweatshop-creator
  volumes:
    manifest-templates:
      volumeKind: configMap
  labels:
    app: sweatshop-creator
  selectorLabels:
    app: sweatshop-creator
  allowPrivilegeEscalation: "false"
  privileged: "false"
  runAsNonRoot: "false"
  readOnlyRootFilesystem: "true"
  serviceAccount: sweatshop-creator
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  containers:
    sweatshop-creator:
      volumeMounts:
        manifest-templates:
          mountPath: /templates/
          volumeKind: emptyDir
      image: eu.gcr.io/stuttgart-things/sweatshop-creator
      replicaCount: 1
      imagePullPolicy: Always
      tag: 23.0729.0808-v0.1.46
      securityContext:
        capabilities: {}
# RBAC
serviceAccounts:
  sweatshop-creator:
    labels:
      app: sweatshop-creator
roles:
  sweatshop-creator:
    labels:
      app: sweatshop-creator
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
      - apiGroups:
          - "batch"
        resources:
          - jobs
        verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
roleBindings:
  sweatshop-creator:
    labels:
      app: sweatshop-creator
    roleRef:
      kind: Role
      name: sweatshop-creator
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: sweatshop-creator
        namespace: sweatshop
clusterRoles:
  sweatshop-creator:
    labels:
      app: sweatshop-creator
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
      - apiGroups:
          - "batch"
        resources:
          - jobs
        verbs:
          - get
          - list
          - create
          - patch
          - delete
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
clusterRoleBindings:
  sweatshop-creator:
    roleRef:
      kind: ClusterRole
      name: sweatshop-creator
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: sweatshop-creator
        namespace: sweatshop
